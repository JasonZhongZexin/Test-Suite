; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/test_cases_bc/complex_tests/test9.c.bc'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test9.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [38 x i32] [i32 84, i32 104, i32 101, i32 32, i32 99, i32 104, i32 97, i32 114, i32 97, i32 99, i32 116, i32 101, i32 114, i32 32, i32 105, i32 115, i32 32, i32 97, i32 32, i32 108, i32 111, i32 119, i32 101, i32 114, i32 99, i32 97, i32 115, i32 101, i32 32, i32 108, i32 101, i32 116, i32 116, i32 101, i32 114, i32 46, i32 10, i32 0], align 4
@.str.1 = private unnamed_addr constant [42 x i32] [i32 84, i32 104, i32 101, i32 32, i32 99, i32 104, i32 97, i32 114, i32 97, i32 99, i32 116, i32 101, i32 114, i32 32, i32 105, i32 115, i32 32, i32 110, i32 111, i32 116, i32 32, i32 97, i32 32, i32 108, i32 111, i32 119, i32 101, i32 114, i32 99, i32 97, i32 115, i32 101, i32 32, i32 108, i32 101, i32 116, i32 116, i32 101, i32 114, i32 46, i32 10, i32 0], align 4
@.str.2 = private unnamed_addr constant [48 x i32] [i32 84, i32 104, i32 101, i32 32, i32 117, i32 112, i32 112, i32 101, i32 114, i32 99, i32 97, i32 115, i32 101, i32 32, i32 118, i32 101, i32 114, i32 115, i32 105, i32 111, i32 110, i32 32, i32 111, i32 102, i32 32, i32 116, i32 104, i32 101, i32 32, i32 99, i32 104, i32 97, i32 114, i32 97, i32 99, i32 116, i32 101, i32 114, i32 32, i32 105, i32 115, i32 32, i32 37, i32 108, i32 99, i32 46, i32 10, i32 0], align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %wc = alloca i32, align 4
  %uc = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 97, i32* %wc, align 4
  %0 = load i32, i32* %wc, align 4
  %call = call i32 @iswlower(i32 %0) #3
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = call i32 (i32*, ...) @wprintf(i32* getelementptr inbounds ([38 x i32], [38 x i32]* @.str, i64 0, i64 0))
  br label %if.end

if.else:                                          ; preds = %entry
  %call2 = call i32 (i32*, ...) @wprintf(i32* getelementptr inbounds ([42 x i32], [42 x i32]* @.str.1, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* %wc, align 4
  %call3 = call i32 @towupper(i32 %1) #3
  store i32 %call3, i32* %uc, align 4
  %2 = load i32, i32* %uc, align 4
  %call4 = call i32 (i32*, ...) @wprintf(i32* getelementptr inbounds ([48 x i32], [48 x i32]* @.str.2, i64 0, i64 0), i32 %2)
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local i32 @iswlower(i32) #1

declare dso_local i32 @wprintf(i32*, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @towupper(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 13.0.0"}
